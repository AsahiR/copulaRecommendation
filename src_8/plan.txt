"""
in __init__
renew

"""

"""
../INPUT_TYPE/{USER_ID,K_ID,all_items.json}
/USER_ID/{user_{true,false},json,ppl_param
/K_ID/{user.json,CLUSTER_ID}
/CLUSTER_ID/{RESULT,PARAM,TEX,COMPARE,PLOT}
/TEX/{exam_source,measure/,exam/}
TEX_EXAM_TOP=TEX_TOP+'/exam'
TEX_MEASURE_TOP=TEX_TOP+'/measure'
TEX_EXAM_SOURCE_TOP=TEX_TOP+'/measure_source'

/RESULT/MODEL_NAME{user_id}.txt
/PARAM/{KL-PROFILE,PDF,CDF,MARG,PICKLE,CLUSTER}
/CLUSTER/cluster_num/user_train_id.txt
/PDF/{model_name__user_id_k_folede.txt}
/PICKLE/model_name_all_items_mapping_id.txt
"""
DISC_SCORE_TYPE_LIST=['kinnennScore']
DISC_SCORE_SPACE_DICT={'kinnennScore':[0.0,1.0]}

ALL_ITEMS = pd.read_json(TOP+'/all_items.json')
ALL_ITEMS_FREQ_DICT={}
for score_type in DISC_SCORE_TYPE_LIST:
#{score_type:{value1:freq1,..},...}
  ALL_ITEMS_FREQ_DICT[score_type]=util.get_freq_dict(ALL_ITEMS)

ALL_ITEMS_PARAM_PATH='all_items'

RESULT_TOP=CLUSTER_ID_TOP+'/result'
CLUSTER_TOP=CLUSTER_ID_TOP+'/cluster'

PDF_CDF_TOP=PARAM_TOP+'/pdf_cdf'
PICKLE_TOP=PARAM_TOP+'/pickle'
MRG_PARAM_TOP=PARAM_TOP+'/marg_param'
CLUSTER_PARAM_TOP=PARAM_TOP+'/cluster'

MEASURE_TYPE_MEASURE_DICT={
'iP':np.array(['iP@0','iP@0.1','iP@0.2','iP@0.3','iP@0.4','iP@0.5','iP@0.6','iP@0.7','iP@0.8','iP@0.9','iP@1.0']),
'MAiP':np.array(['MAiP']),
'nDCG':np.array(['nDCG@5','nDCG@10','nDCG@15','nDCG@20','nDCG@25','nDCG@30']),
'P':np.array(['P@5','P@10','P@15','P@20','P@25','P@30'])
}
#for length
MEASURE_TYPE_LIST=['iP','MAiP','nDCG','P']

TLR_DROPPED=1
TLR_NOT_DROPPED=0
RANKING_TRUE_POSITIVE='0'
RANKING_TRUE_NEGATIVE='1'
RANKING_FALSE_NEGATIVE='2'
RANKING_FALSE_POTIVE='3'

